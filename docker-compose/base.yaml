services:
  db:
    image: postgres:17.2
    container_name: postgresdb
    networks:
      - gokakashi-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: CHANGE_THIS_PASSWORD
      POSTGRES_DB: gokakashi
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  gokakashi-server:
    build: ../
    container_name: gokakashi-server
    command: server --config=config.yaml
    networks:
      - gokakashi-network
    ports:
      - "5555:5555"
      - "5556:5556"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: CHANGE_THIS_PASSWORD
      DB_NAME: gokakashi
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config.yaml

  gokakashi-notifier:
    build:
      context: ../
      dockerfile: cmd/notifier/Dockerfile
    container_name: gokakashi-notifier
    networks:
      - gokakashi-network
    environment:
      - SERVER=http://gokakashi-server
      - PORT=5556
      - TOKEN=${GOKAKASHI_API_TOKEN}
    depends_on:
      gokakashi-server:
        condition: service_started

  gokakashi-assigner:
    build:
      context: ../
      dockerfile: cmd/assigner/Dockerfile
    container_name: gokakashi-assigner
    networks:
      - gokakashi-network
    environment:
      - SERVER=http://gokakashi-server
      - PORT=5556
      - TOKEN=${GOKAKASHI_API_TOKEN}
    depends_on:
      gokakashi-server:
        condition: service_started

networks:
  gokakashi-network:

volumes:
  pgdata:
  workspace:
